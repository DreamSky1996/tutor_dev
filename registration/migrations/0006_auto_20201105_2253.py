# Generated by Django 3.1.1 on 2020-11-05 12:53

import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('registration', '0005_staffs_birthday'),
    ]

    operations = [
        migrations.CreateModel(
            name='Brands',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=150, verbose_name='first_name')),
                ('last_name', models.CharField(max_length=150, verbose_name='last_name')),
                ('birthday', models.DateField(verbose_name='DOB')),
                ('gender', models.CharField(max_length=50, verbose_name='gender')),
                ('email', models.EmailField(max_length=254, verbose_name='email')),
                ('phone', models.CharField(max_length=50, verbose_name='phone')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('password', models.CharField(max_length=255, verbose_name='password')),
                ('state', models.CharField(max_length=255, verbose_name='state')),
                ('country', models.CharField(max_length=255, verbose_name='country')),
                ('company_name', models.CharField(max_length=255, verbose_name='company_name')),
                ('company_email', models.EmailField(max_length=254, verbose_name='company_email')),
                ('content_category', models.CharField(max_length=255, verbose_name='content_category')),
                ('photo', models.ImageField(upload_to='uploads/photo/brands/')),
                ('pin', models.IntegerField(verbose_name='PIN')),
                ('expenditure', models.FloatField(verbose_name='expenditure')),
                ('reward_sent', models.FloatField(verbose_name='reward_sent')),
                ('unclaimed_funds', models.FloatField(verbose_name='unclaimed_funds')),
                ('ratings', models.CharField(max_length=255, verbose_name='ratings')),
                ('facebook', models.CharField(max_length=255, verbose_name='facebook')),
                ('instagram', models.CharField(max_length=255, verbose_name='instagram')),
                ('twitter', models.CharField(max_length=255, verbose_name='twitter')),
                ('youtube', models.CharField(max_length=255, verbose_name='youtube')),
                ('tiktok', models.CharField(max_length=255, verbose_name='tiktok')),
                ('snap', models.CharField(max_length=255, verbose_name='snap')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date_created')),
                ('updated', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date_updated')),
                ('company_size', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.companysize')),
                ('company_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.companytype')),
                ('roles', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.roles')),
            ],
            options={
                'db_table': 'brands',
            },
        ),
        migrations.CreateModel(
            name='Creators',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=150, verbose_name='first_name')),
                ('last_name', models.CharField(max_length=150, verbose_name='last_name')),
                ('birthday', models.DateField(verbose_name='DOB')),
                ('gender', models.CharField(max_length=50, verbose_name='gender')),
                ('email', models.EmailField(max_length=254, verbose_name='email')),
                ('phone', models.CharField(max_length=50, verbose_name='phone')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('password', models.CharField(max_length=255, verbose_name='password')),
                ('state', models.CharField(max_length=255, verbose_name='state')),
                ('country', models.CharField(max_length=255, verbose_name='country')),
                ('company_name', models.CharField(max_length=255, verbose_name='company_name')),
                ('company_email', models.EmailField(max_length=254, verbose_name='company_email')),
                ('content_category', models.CharField(max_length=255, verbose_name='content_category')),
                ('photo', models.ImageField(upload_to='uploads/photo/creators/')),
                ('pin', models.IntegerField(verbose_name='PIN')),
                ('earnings', models.FloatField(verbose_name='earnings')),
                ('rewards', models.FloatField(verbose_name='rewards')),
                ('bank_name', models.CharField(max_length=255, verbose_name='bank_name')),
                ('account_num', models.CharField(max_length=255, verbose_name='account_num')),
                ('ratings', models.CharField(max_length=255, verbose_name='ratings')),
                ('facebook', models.CharField(max_length=255, verbose_name='facebook')),
                ('instagram', models.CharField(max_length=255, verbose_name='instagram')),
                ('twitter', models.CharField(max_length=255, verbose_name='twitter')),
                ('youtube', models.CharField(max_length=255, verbose_name='youtube')),
                ('tiktok', models.CharField(max_length=255, verbose_name='tiktok')),
                ('snap', models.CharField(max_length=255, verbose_name='snap')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date_created')),
                ('updated', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date_updated')),
                ('company_size', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.companysize')),
                ('company_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.companytype')),
                ('roles', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.roles')),
            ],
            options={
                'db_table': 'creators',
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=255, verbose_name='status')),
            ],
            options={
                'db_table': 'status',
            },
        ),
        migrations.RemoveField(
            model_name='staffs',
            name='snampmsgboard',
        ),
        migrations.AddField(
            model_name='staffs',
            name='message_board',
            field=models.CharField(default='', max_length=255, verbose_name='message_board'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='staffs',
            name='snap',
            field=models.CharField(default='', max_length=255, verbose_name='snap'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='staffs',
            name='expenditure',
            field=models.FloatField(verbose_name='expenditure'),
        ),
        migrations.AlterField(
            model_name='staffs',
            name='gender',
            field=models.CharField(max_length=50, verbose_name='gender'),
        ),
        migrations.AlterField(
            model_name='staffs',
            name='reward_sent',
            field=models.FloatField(verbose_name='reward_sent'),
        ),
        migrations.AlterField(
            model_name='staffs',
            name='unclaimed_funds',
            field=models.FloatField(verbose_name='unclaimed_funds'),
        ),
        migrations.DeleteModel(
            name='Gender',
        ),
        migrations.AddField(
            model_name='creators',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.status'),
        ),
        migrations.AddField(
            model_name='brands',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.status'),
        ),
        migrations.AlterField(
            model_name='staffs',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.status'),
        ),
    ]
